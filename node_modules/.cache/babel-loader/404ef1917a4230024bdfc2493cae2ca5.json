{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/cites/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Grid, IconButton, FormControl, OutlinedInput, InputAdornment, Button } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport CustomTable from \"../customTable/CustomTable\";\nimport Fuse from \"fuse.js\";\nimport AddModal from \"./AddModa\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport clsx from \"clsx\";\nimport NewCaseModal from \"./NewCaseModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cites = ({\n  province,\n  cities,\n  state,\n  setState,\n  update,\n  setUpdate\n}) => {\n  _s();\n\n  console.log(province);\n  const classes = useStyles();\n  const [openAdd, setOpenAdd] = useState(false);\n  const [openNew, setOpenNew] = useState(false);\n  const [search, setSearch] = useState();\n  const [list, setList] = useState();\n  const [searchResult, setSearchResult] = useState();\n  const [ID, setID] = useState();\n  useEffect(() => {\n    let id = [];\n\n    if (province && province !== undefined) {\n      cities === null || cities === void 0 ? void 0 : cities.map(item => {\n        if (province === item.fProvincesId) {\n          id.push(item);\n        }\n      });\n      setList(id);\n    }\n  }, [, province, state, update]);\n\n  const handleChangePageNumber = (event, page) => {\n    setState(prevState => ({ ...prevState,\n      pageNumber: page + 1,\n      pageSize: state === null || state === void 0 ? void 0 : state.pageSize\n    }));\n  };\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleClick2 = () => {\n    if (!!search && search !== undefined) {\n      const val = fuse2.search(search);\n      const results = val.map(character => character.item.title);\n      setSearchResult(results);\n    }\n  };\n\n  const fuse2 = list && new Fuse(list, {\n    keys: [\"title\"],\n    includeScore: true\n  });\n\n  const getItem2 = x => {\n    let res = [];\n    x.map(item => {\n      list === null || list === void 0 ? void 0 : list.map(elm => {\n        if (item === elm.title) {\n          res.push(elm);\n        }\n      });\n    });\n    return res;\n  };\n\n  const handleShowModal = val => {\n    setID(val);\n    setOpenAdd(true);\n  };\n\n  const TableOption = [{\n    name: \"number\",\n    title: \"ردیف\",\n    render: (record, i, index) => /*#__PURE__*/_jsxDEV(Typography, {\n      type: \"16m\",\n      color: \"textP\",\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, {\n    name: \"name\",\n    title: \"نام شهر\",\n    render: (record, index) => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleShowModal(record.id),\n      color: \"primary\",\n      autoFocus: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        type: \"16m\",\n        color: \"textP\",\n        children: record.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, {\n    name: \"latinName\",\n    title: \"نام شهر به لاتین\",\n    render: (record, index) => /*#__PURE__*/_jsxDEV(Typography, {\n      type: \"16m\",\n      color: \"textP\",\n      children: record.latinName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, {\n    name: \"province\",\n    title: \"نام استان\",\n    render: (record, index) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textP\",\n        type: \"16m\",\n        children: record.provinceTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    name: \"country\",\n    title: \"نام کشور\",\n    render: (record, index) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textP\",\n        type: \"16m\",\n        children: record.provinceCountryTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    children: province && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.input3,\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment\",\n            placeholder: \"جستجو ...\",\n            onChange: handleChange,\n            value: search,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick2,\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  color: \"disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.buttonWrapperLogin, classes.partB),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: classes.text2,\n          children: \"اگر شهر شما در این لیست موجود نمی باشد  دکمه اضافه کن را کلیک کنید\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: classes.btn,\n          onClick: () => setOpenNew(true),\n          children: \"اضافه کن\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NewCaseModal, {\n          open: openNew,\n          handleClose: () => setOpenNew(false),\n          province: province,\n          setUpdate: setUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTable, {\n        TableOption: TableOption,\n        data: searchResult ? getItem2(searchResult) : list,\n        is_fetch: state === null || state === void 0 ? void 0 : state.is_fetch,\n        pageNumber: state === null || state === void 0 ? void 0 : state.pageNumber,\n        count: state === null || state === void 0 ? void 0 : state.count,\n        pageSize: state === null || state === void 0 ? void 0 : state.pageSize,\n        pagination: true,\n        handleChange: handleChangePageNumber,\n        type: \"sticky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n        open: openAdd,\n        handleClose: () => setOpenAdd(false),\n        id: ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cites, \"EBTO8x7PZ4V8KNgfaIA+rv/LROg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cites;\nexport default Cites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cites\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/cites/table.js"],"names":["React","useEffect","useState","Typography","Grid","IconButton","FormControl","OutlinedInput","InputAdornment","Button","useStyles","CustomTable","Fuse","AddModal","SearchIcon","clsx","NewCaseModal","Cites","province","cities","state","setState","update","setUpdate","console","log","classes","openAdd","setOpenAdd","openNew","setOpenNew","search","setSearch","list","setList","searchResult","setSearchResult","ID","setID","id","undefined","map","item","fProvincesId","push","handleChangePageNumber","event","page","prevState","pageNumber","pageSize","handleChange","e","target","value","handleClick2","val","fuse2","results","character","title","keys","includeScore","getItem2","x","res","elm","handleShowModal","TableOption","name","render","record","i","index","latinName","provinceTitle","provinceCountryTitle","container","input3","buttonWrapperLogin","partB","text2","btn","is_fetch","count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Grid,\n  IconButton,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  Button,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport CustomTable from \"../customTable/CustomTable\";\nimport Fuse from \"fuse.js\";\nimport AddModal from \"./AddModa\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport clsx from \"clsx\";\nimport NewCaseModal from \"./NewCaseModal\";\n\nconst Cites = ({ province, cities, state, setState, update, setUpdate }) => {\n  console.log(province);\n  const classes = useStyles();\n  const [openAdd, setOpenAdd] = useState(false);\n  const [openNew, setOpenNew] = useState(false);\n  const [search, setSearch] = useState();\n  const [list, setList] = useState();\n  const [searchResult, setSearchResult] = useState();\n  const [ID, setID] = useState();\n\n  useEffect(() => {\n    let id = [];\n    if (province && province !== undefined) {\n      cities?.map((item) => {\n        if (province === item.fProvincesId) {\n          id.push(item);\n        }\n      });\n      setList(id);\n    }\n  }, [,province, state, update]);\n  const handleChangePageNumber = (event, page) => {\n    setState((prevState) => ({\n      ...prevState,\n      pageNumber: page + 1,\n      pageSize: state?.pageSize,\n    }));\n  };\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleClick2 = () => {\n    if (!!search && search !== undefined) {\n      const val = fuse2.search(search);\n      const results = val.map((character) => character.item.title);\n      setSearchResult(results);\n    }\n  };\n  const fuse2 =\n    list &&\n    new Fuse(list, {\n      keys: [\"title\"],\n      includeScore: true,\n    });\n  const getItem2 = (x) => {\n    let res = [];\n    x.map((item) => {\n      list?.map((elm) => {\n        if (item === elm.title) {\n          res.push(elm);\n        }\n      });\n    });\n    return res;\n  };\n  const handleShowModal = (val) => {\n    setID(val);\n    setOpenAdd(true);\n  };\n  const TableOption = [\n    {\n      name: \"number\",\n      title: \"ردیف\",\n\n      render: (record, i, index) => (\n        <Typography type=\"16m\" color=\"textP\">\n          {index + 1}\n        </Typography>\n      ),\n    },\n    {\n      name: \"name\",\n      title: \"نام شهر\",\n\n      render: (record, index) => (\n        <Button\n          onClick={() => handleShowModal(record.id)}\n          color=\"primary\"\n          autoFocus\n        >\n          <Typography type=\"16m\" color=\"textP\">\n            {record.title}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      name: \"latinName\",\n      title: \"نام شهر به لاتین\",\n\n      render: (record, index) => (\n        <Typography type=\"16m\" color=\"textP\">\n          {record.latinName}\n        </Typography>\n      ),\n    },\n    {\n      name: \"province\",\n      title: \"نام استان\",\n      render: (record, index) => {\n        return (\n          <Typography color=\"textP\" type=\"16m\">\n            {record.provinceTitle}\n          </Typography>\n        );\n      },\n    },\n    {\n      name: \"country\",\n      title: \"نام کشور\",\n      render: (record, index) => {\n        return (\n          <Typography color=\"textP\" type=\"16m\">\n            {record.provinceCountryTitle}\n          </Typography>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Grid item xs={12}>\n      {province && (\n        <div>\n          <form className={classes.container}>\n            <FormControl className={classes.input3} variant=\"outlined\">\n              <OutlinedInput\n                id=\"outlined-adornment\"\n                placeholder={\"جستجو ...\"}\n                onChange={handleChange}\n                value={search}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleClick2}>\n                      <SearchIcon color=\"disabled\" />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </form>\n          <div className={clsx(classes.buttonWrapperLogin, classes.partB)}>\n            <Typography variant=\"body1\" className={classes.text2}>\n              {\n                \"اگر شهر شما در این لیست موجود نمی باشد  دکمه اضافه کن را کلیک کنید\"\n              }\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.btn}\n              onClick={() => setOpenNew(true)}\n            >\n              {\"اضافه کن\"}\n            </Button>\n            <NewCaseModal\n              open={openNew}\n              handleClose={() => setOpenNew(false)}\n              province={province}\n              setUpdate={setUpdate}\n            />\n          </div>\n          <CustomTable\n            TableOption={TableOption}\n            data={searchResult ? getItem2(searchResult) : list}\n            is_fetch={state?.is_fetch}\n            pageNumber={state?.pageNumber}\n            count={state?.count}\n            pageSize={state?.pageSize}\n            pagination={true}\n            handleChange={handleChangePageNumber}\n            type=\"sticky\"\n          />\n          <AddModal\n            open={openAdd}\n            handleClose={() => setOpenAdd(false)}\n            id={ID}\n          />\n        </div>\n      )}\n    </Grid>\n  );\n};\n\nexport default Cites;\n"]},"metadata":{},"sourceType":"module"}