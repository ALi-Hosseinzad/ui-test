{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/context/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { userInitState, userReducer } from \"../reducer\";\nimport userApi from \"../helper/user\";\nimport { getCachedData } from \"@core/utils/localStorageManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDispatchContext = /*#__PURE__*/React.createContext();\nconst UserStateContext = /*#__PURE__*/React.createContext();\n\nfunction UserProvider({\n  children\n}) {\n  _s();\n\n  const token = getCachedData(\"access_token\");\n  const initState = { ...userInitState,\n    token,\n    authorized: !!token ? true : false\n  };\n  const [state, dispatch] = React.useReducer(userReducer, initState);\n  useEffect(() => {\n    if (!!token) {\n      userApi.getCurrentUserSummary().then(({\n        content\n      }) => {\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: {\n            user: content\n          }\n        });\n      }).catch(e => {});\n    }\n  }, [state.token]);\n  return /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UserDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"YPkXqXng2ttkhG57PsQfaW8jUeQ=\");\n\n_c = UserProvider;\n\nfunction useUserState() {\n  _s2();\n\n  const context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s2(useUserState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction useUserDispatch() {\n  _s3();\n\n  const context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s3(useUserDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserProvider, useUserState, useUserDispatch };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/context/index.js"],"names":["React","useEffect","useContext","userInitState","userReducer","userApi","getCachedData","UserDispatchContext","createContext","UserStateContext","UserProvider","children","token","initState","authorized","state","dispatch","useReducer","getCurrentUserSummary","then","content","type","payload","user","catch","e","useUserState","context","undefined","Error","useUserDispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,YAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AAGA,MAAMC,mBAAmB,gBAAGP,KAAK,CAACQ,aAAN,EAA5B;AACA,MAAMC,gBAAgB,gBAAGT,KAAK,CAACQ,aAAN,EAAzB;;AAEA,SAASE,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAClC,QAAMC,KAAK,GAAGN,aAAa,CAAC,cAAD,CAA3B;AACA,QAAMO,SAAS,GAAG,EAChB,GAAGV,aADa;AAEhBS,IAAAA,KAFgB;AAGhBE,IAAAA,UAAU,EAAE,CAAC,CAACF,KAAF,GAAU,IAAV,GAAiB;AAHb,GAAlB;AAMA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACiB,UAAN,CAAiBb,WAAjB,EAA8BS,SAA9B,CAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC,CAACW,KAAN,EAAa;AACXP,MAAAA,OAAO,CACJa,qBADH,GAEGC,IAFH,CAEQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiB;AACrBJ,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAE,eADC;AAEPC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFF,SAAD,CAAR;AAID,OAPH,EAQGI,KARH,CAQUC,CAAD,IAAO,CAAE,CARlB;AASD;AACF,GAZQ,EAYN,CAACV,KAAK,CAACH,KAAP,CAZM,CAAT;AAcA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEG,KAAlC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEC,QAArC;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/BQD,Y;;KAAAA,Y;;AAiCT,SAASgB,YAAT,GAAwB;AAAA;;AACtB,QAAMC,OAAO,GAAG3B,KAAK,CAACE,UAAN,CAAiBO,gBAAjB,CAAhB;;AACA,MAAIkB,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD;;IANQD,Y;;AAQT,SAASI,eAAT,GAA2B;AAAA;;AACzB,QAAMH,OAAO,GAAG3B,KAAK,CAACE,UAAN,CAAiBK,mBAAjB,CAAhB;;AACA,MAAIoB,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD;;IANQG,e;;AAQT,SAASpB,YAAT,EAAuBgB,YAAvB,EAAqCI,eAArC","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { userInitState, userReducer } from \"../reducer\";\nimport userApi from \"../helper/user\";\nimport { getCachedData } from \"@core/utils/localStorageManager\";\n\n\nconst UserDispatchContext = React.createContext();\nconst UserStateContext = React.createContext();\n\nfunction UserProvider({ children }) {\n  const token = getCachedData(\"access_token\");\n  const initState = {\n    ...userInitState,\n    token,\n    authorized: !!token ? true : false,\n  };\n\n  const [state, dispatch] = React.useReducer(userReducer, initState);\n\n  useEffect(() => {\n    if (!!token) {\n      userApi\n        .getCurrentUserSummary()\n        .then(({ content }) => {\n          dispatch({\n            type: \"FETCH_SUCCESS\",\n            payload: { user: content },\n          });\n        })\n        .catch((e) => {});\n    }\n  }, [state.token]);\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  const context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  const context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch };\n"]},"metadata":{},"sourceType":"module"}