{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/login/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { Grid, Typography, Button, TextField, Paper } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport getValidationSchema from \"./Schema\";\nimport authApi from \"../helper/auth\";\nimport { useUserDispatch } from \"../context/index\";\nimport { notification } from \"../helper/notifications\";\nimport { USER_LOGIN } from \"../reducer/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatchUser = useUserDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(getValidationSchema([\"userName\", \"password\"]))\n  });\n\n  const submit = value => {\n    setLoading(true);\n    authApi.login({\n      payload: {\n        username: value.userName,\n        password: value.password,\n        grant_type: \"password\"\n      }\n    }).then(data => {\n      setLoading(false);\n      console.log(data);\n      dispatchUser({\n        type: USER_LOGIN.SUCCESS,\n        payload: {\n          token: data.content.token\n        }\n      });\n    }).catch(error => {\n      setLoading(false);\n      notification(\"Error\", \"danger\", (error === null || error === void 0 ? void 0 : error.message) ? error.message : \"An error occurred on the server\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://tipaxco.com/UI/Styles/Default/images/logo.svg\",\n            alt: \"logo\",\n            width: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: classes.titleLogin,\n          children: \"خوش آمدید\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: handleSubmit(submit),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 8,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: classes.formControl2,\n                xl: 12,\n                lg: 12,\n                md: 12,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoFocus: true,\n                  className: classes.input,\n                  name: \"userName\",\n                  inputProps: {\n                    min: 0,\n                    style: {\n                      textAlign: \"center\"\n                    }\n                  },\n                  inputRef: register(\"userName\").ref,\n                  ...register(\"userName\"),\n                  helperText: errors.userName && errors.userName.message,\n                  error: errors.userName,\n                  placeholder: \"نام کاربری\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: classes.formControl2,\n                xl: 12,\n                lg: 12,\n                md: 12,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  inputProps: {\n                    min: 0,\n                    style: {\n                      textAlign: \"center\",\n                      color: \"white\"\n                    }\n                  },\n                  className: classes.input,\n                  inputRef: register(\"password\").ref,\n                  ...register(\"password\"),\n                  helperText: errors.password && errors.password.message,\n                  error: errors.password,\n                  placeholder: \"رمز عبور\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.buttonWrapperLogin,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              className: classes.btn,\n              children: \"ورود\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"Y8+A6Xdk2qJoBXngmZc+CrPki3s=\", false, function () {\n  return [useStyles, useUserDispatch, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/login/login.js"],"names":["React","useState","useStyles","Grid","Typography","Button","TextField","Paper","useForm","yupResolver","getValidationSchema","authApi","useUserDispatch","notification","USER_LOGIN","LoginForm","classes","dispatchUser","loading","setLoading","register","handleSubmit","formState","errors","resolver","submit","value","login","payload","username","userName","password","grant_type","then","data","console","log","type","SUCCESS","token","content","catch","error","message","root","paper","image","titleLogin","form","formControl2","xl","lg","md","xs","sm","input","min","style","textAlign","ref","color","buttonWrapperLogin","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { Grid, Typography, Button, TextField, Paper } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport getValidationSchema from \"./Schema\";\nimport authApi from \"../helper/auth\";\nimport { useUserDispatch } from \"../context/index\";\nimport { notification } from \"../helper/notifications\";\nimport { USER_LOGIN } from \"../reducer/UserAction\";\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const dispatchUser = useUserDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(getValidationSchema([\"userName\", \"password\"])),\n  });\n\n  const submit = (value) => {\n    setLoading(true);\n    authApi\n      .login({\n        payload: {\n          username: value.userName,\n          password: value.password,\n          grant_type: \"password\",\n        },\n      })\n      .then((data) => {\n        setLoading(false);\n        console.log(data);\n        dispatchUser({\n          type: USER_LOGIN.SUCCESS,\n          payload: {\n            token: data.content.token,\n          },\n        });\n      })\n      .catch((error) => {\n        setLoading(false);\n        notification(\n          \"Error\",\n          \"danger\",\n          error?.message ? error.message : \"An error occurred on the server\"\n        );\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <div className={classes.content}>\n          <div className={classes.image}>\n            <img\n              src=\"https://tipaxco.com/UI/Styles/Default/images/logo.svg\"\n              alt=\"logo\"\n              width=\"50%\"\n            />\n          </div>\n          <Typography variant=\"h4\" className={classes.titleLogin}>\n            {\"خوش آمدید\"}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit(submit)}>\n            <Grid container spacing={8}>\n              <>\n                <Grid\n                  item\n                  className={classes.formControl2}\n                  {...{ xl: 12, lg: 12, md: 12, xs: 12, sm: 12 }}\n                >\n                  <TextField\n                    autoFocus={true}\n                    className={classes.input}\n                    name={\"userName\"}\n                    inputProps={{ min: 0, style: { textAlign: \"center\" } }}\n                    inputRef={register(\"userName\").ref}\n                    {...register(\"userName\")}\n                    helperText={errors.userName && errors.userName.message}\n                    error={errors.userName}\n                    placeholder={\"نام کاربری\"}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  className={classes.formControl2}\n                  {...{ xl: 12, lg: 12, md: 12, xs: 12, sm: 12 }}\n                >\n                  <TextField\n                    name={\"password\"}\n                    inputProps={{\n                      min: 0,\n                      style: { textAlign: \"center\", color: \"white\" },\n                    }}\n                    className={classes.input}\n                    inputRef={register(\"password\").ref}\n                    {...register(\"password\")}\n                    helperText={errors.password && errors.password.message}\n                    error={errors.password}\n                    placeholder={\"رمز عبور\"}\n                  />\n                </Grid>\n              </>\n            </Grid>\n            <div className={classes.buttonWrapperLogin}>\n              <Button type=\"submit\" variant=\"contained\" className={classes.btn}>\n                {\"ورود\"}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}