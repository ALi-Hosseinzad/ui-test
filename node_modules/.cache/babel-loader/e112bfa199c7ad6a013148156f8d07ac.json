{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/cites/Cites.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AppBar, Button, Grid, MenuItem, Paper, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { useUserState } from \"../context\";\nimport curdApi from \"../helper/curdApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const classes = useStyles();\n  const user = useUserState().user;\n  const [province, setProvince] = useState();\n  const [provinces, setProvinces] = useState();\n\n  const handleChange = event => {\n    setProvince(event.target.value);\n  };\n\n  useEffect(() => {\n    curdApi.getProvince({}).then(content => {\n      con;\n      setProvinces(content.data);\n    });\n  }, [provinces]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        variant: \"dense\",\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://tipaxco.com/UI/Styles/Default/images/logo.svg\",\n          alt: \"logo\",\n          width: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.user,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: classes.text,\n            children: user === null || user === void 0 ? void 0 : user.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-select-currency\",\n            select: true,\n            label: \"Select\",\n            value: province,\n            onChange: handleChange,\n            helperText: \"Please select your currency\",\n            children: provinces.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"Pu0pOyLApDgJOzVNUtB3gqeij0g=\", false, function () {\n  return [useStyles, useUserState];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/cites/Cites.js"],"names":["React","useEffect","useState","AppBar","Button","Grid","MenuItem","Paper","TextField","Toolbar","Typography","useStyles","useUserState","curdApi","Account","classes","user","province","setProvince","provinces","setProvinces","handleChange","event","target","value","getProvince","then","content","con","data","root","appBar","toolbar","text","userName","paper","image","map","option","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  AppBar,\n  Button,\n  Grid,\n  MenuItem,\n  Paper,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { useUserState } from \"../context\";\nimport curdApi from \"../helper/curdApi\";\n\nconst Account = () => {\n  const classes = useStyles();\n  const user = useUserState().user;\n  const [province, setProvince] = useState();\n  const [provinces, setProvinces] = useState();\n\n  const handleChange = (event) => {\n    setProvince(event.target.value);\n  };\n  useEffect(() => {\n    curdApi.getProvince({}).then((content) => {\n        con\n      setProvinces(content.data);\n    });\n  }, [provinces]);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <img\n            src=\"https://tipaxco.com/UI/Styles/Default/images/logo.svg\"\n            alt=\"logo\"\n            width=\"100px\"\n          />\n          <div className={classes.user}>\n            <Typography variant=\"h5\" className={classes.text}>\n              {user?.userName}\n            </Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Paper elevation={0} className={classes.paper}>\n        <div className={classes.content}>\n          <div className={classes.image}>\n            <TextField\n              id=\"standard-select-currency\"\n              select\n              label=\"Select\"\n              value={province}\n              onChange={handleChange}\n              helperText=\"Please select your currency\"\n            >\n              {provinces.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}