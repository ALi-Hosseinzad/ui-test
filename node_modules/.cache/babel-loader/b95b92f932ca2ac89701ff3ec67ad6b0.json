{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/helper/Route/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { Redirect, Route as RRoute, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useUserState } from \"../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Route({\n  authorize,\n  children,\n  ...rest\n}) {\n  _s();\n\n  const {\n    authorized\n  } = useUserState();\n  const {\n    pathname\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(RRoute, { ...rest,\n    render: ({\n      location\n    }) => {\n      if (authorize && !authorized && pathname !== \"/login\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      } else if (!authorize && authorized) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/dashboard/profile\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      } else if (pathname === \"/\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/dashboard/profile\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      } else {\n        return children;\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"oJYcYXRYb7Vh7cTP8O40RadFW6E=\", false, function () {\n  return [useUserState, useLocation];\n});\n\n_c = Route;\nRoute.propTypes = {\n  authorize: PropTypes.bool\n};\nexport default _c2 = /*#__PURE__*/memo(Route);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Route\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/helper/Route/index.js"],"names":["React","memo","Redirect","Route","RRoute","useLocation","PropTypes","useUserState","authorize","children","rest","authorized","pathname","location","state","from","propTypes","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,QAAT,EAAmBC,KAAK,IAAIC,MAA5B,EAAoCC,WAApC,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,KAA7B;;;AAEA,SAASJ,KAAT,CAAe;AAAEK,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuB,KAAGC;AAA1B,CAAf,EAAiD;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,YAAY,EAAnC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AAEA,sBACE,QAAC,MAAD,OACMK,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAkB;AACxB,UAAIL,SAAS,IAAI,CAACG,UAAd,IAA4BC,QAAQ,KAAK,QAA7C,EAAuD;AACrD,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFA,YAAAA,QAAQ,EAAE,QADR;AAEFE,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEF;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD,MASO,IAAI,CAACL,SAAD,IAAcG,UAAlB,EAA8B;AACnC,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,QAAQ,EAAE,oBADR;AAEFE,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEF;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATM,MASA,IAAID,QAAQ,KAAK,GAAjB,EAAsB;AAC3B,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFA,YAAAA,QAAQ,EAAE,oBADR;AAEFE,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEF;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATM,MASA;AACL,eAAOJ,QAAP;AACD;AACF;AAjCH;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCQN,K;UACgBI,Y,EACFF,W;;;KAFdF,K;AA2CTA,KAAK,CAACa,SAAN,GAAkB;AAChBR,EAAAA,SAAS,EAAEF,SAAS,CAACW;AADL,CAAlB;AAIA,kCAAehB,IAAI,CAACE,KAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { Redirect, Route as RRoute, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useUserState } from \"../\";\n\nfunction Route({ authorize, children, ...rest }) {\n  const { authorized } = useUserState();\n  const { pathname } = useLocation();\n\n  return (\n    <RRoute\n      {...rest}\n      render={({ location }) => {\n        if (authorize && !authorized && pathname !== \"/login\") {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location },\n              }}\n            />\n          );\n        } else if (!authorize && authorized) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/dashboard/profile\",\n                state: { from: location },\n              }}\n            />\n          );\n        } else if (pathname === \"/\") {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/dashboard/profile\",\n                state: { from: location },\n              }}\n            />\n          );\n        } else {\n          return children;\n        }\n      }}\n    />\n  );\n}\n\nRoute.propTypes = {\n  authorize: PropTypes.bool,\n};\n\nexport default memo(Route);\n"]},"metadata":{},"sourceType":"module"}