{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/login/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport { Grid, Typography, Button, TextField, Paper } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport getValidationSchema from \"./Schema\";\nimport authApi from \"../helper/auth\";\nimport { useUserDispatch } from \"../context/index\";\nimport { notification } from \"../helper/notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatchUser = useUserDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(getValidationSchema([\"userName\", \"password\"]))\n  });\n\n  const submit = value => {\n    setLoading(true);\n    authApi.login({\n      payload: value\n    }).then(data => {\n      setLoading(false);\n      dispatchUser({\n        type: \"LOGIN_SUCCESS\",\n        payload: {\n          token: data.content.token\n        }\n      });\n    }).catch(error => {\n      setLoading(false);\n      notification(\"Error\", \"danger\", (error === null || error === void 0 ? void 0 : error.message) ? error.message : \"An error occurred on the server\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: classes.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"lg\",\n        color: \"secondary.main\",\n        className: classes.titleLogin,\n        children: \"Login to account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit(submit),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 8,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.formControl2,\n              xl: 12,\n              lg: 12,\n              md: 12,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.formControl2,\n              xl: 12,\n              lg: 12,\n              md: 12,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoFocus: true,\n                variant: \"outlined\",\n                name: \"userName\",\n                inputRef: register(\"userName\").ref,\n                ...register(\"userName\"),\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.userName) && (errors === null || errors === void 0 ? void 0 : errors.userName.message),\n                error: errors === null || errors === void 0 ? void 0 : errors.userName,\n                placeholder: \"userName\",\n                withIconStart: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-user-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.formControl2,\n              xl: 12,\n              lg: 12,\n              md: 12,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                name: \"password\",\n                inputRef: register(\"password\").ref,\n                ...register(\"password\"),\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.password) && (errors === null || errors === void 0 ? void 0 : errors.password.message),\n                error: errors === null || errors === void 0 ? void 0 : errors.password,\n                placeholder: \"password\",\n                withIconStart: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-key\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 34\n                }, this),\n                withIconEnd: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonWrapperLogin,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"aVPDGbKCksI4SyAEgRaoYnIQgto=\", false, function () {\n  return [useStyles, useUserDispatch, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/login/login.js"],"names":["React","useState","Link","useStyles","Grid","Typography","Button","TextField","Paper","useForm","yupResolver","getValidationSchema","authApi","useUserDispatch","notification","LoginForm","classes","dispatchUser","loading","setLoading","register","handleSubmit","errors","resolver","submit","value","login","payload","then","data","type","token","content","catch","error","message","paper","logo","titleLogin","form","formControl2","xl","lg","md","xs","sm","ref","userName","password","buttonWrapperLogin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport { Grid, Typography, Button, TextField, Paper } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport getValidationSchema from \"./Schema\";\nimport authApi from \"../helper/auth\";\nimport { useUserDispatch } from \"../context/index\";\nimport { notification } from \"../helper/notifications\";\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const dispatchUser = useUserDispatch();\n  const [loading, setLoading] = useState(false);\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(getValidationSchema([\"userName\", \"password\"])),\n  });\n\n  const submit = (value) => {\n    setLoading(true);\n    authApi\n      .login({\n        payload: value,\n      })\n      .then((data) => {\n        setLoading(false);\n        dispatchUser({\n          type: \"LOGIN_SUCCESS\",\n          payload: {\n            token: data.content.token,\n          },\n        });\n      })\n      .catch((error) => {\n        setLoading(false);\n        notification(\n          \"Error\",\n          \"danger\",\n          error?.message ? error.message : \"An error occurred on the server\"\n        );\n      });\n  };\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <div className={classes.content}>\n        <Link to=\"/\" className={classes.logo}>\n          {/* <img src=\"/static/icons/Logo/Logo-icon.svg\" alt=\"logo\" /> */}\n        </Link>\n        <Typography\n          variant=\"lg\"\n          color=\"secondary.main\"\n          className={classes.titleLogin}\n        >\n          {\"Login to account\"}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(submit)}>\n          <Grid container spacing={8}>\n            <>\n              <Grid\n                item\n                className={classes.formControl2}\n                {...{ xl: 12, lg: 12, md: 12, xs: 12, sm: 12 }}\n              >\n                <img src/>\n              </Grid>\n              <Grid\n                item\n                className={classes.formControl2}\n                {...{ xl: 12, lg: 12, md: 12, xs: 12, sm: 12 }}\n              >\n                <TextField\n                  autoFocus={true}\n                  variant=\"outlined\"\n                  name={\"userName\"}\n                  inputRef={register(\"userName\").ref}\n                  {...register(\"userName\")}\n                  helperText={errors?.userName && errors?.userName.message}\n                  error={errors?.userName}\n                  placeholder={\"userName\"}\n                  withIconStart={<i className=\"icon-user-circle\"></i>}\n                />\n              </Grid>\n              <Grid\n                item\n                className={classes.formControl2}\n                {...{ xl: 12, lg: 12, md: 12, xs: 12, sm: 12 }}\n              >\n                <TextField\n                  variant=\"outlined\"\n                  name={\"password\"}\n                  inputRef={register(\"password\").ref}\n                  {...register(\"password\")}\n                  helperText={errors?.password && errors?.password.message}\n                  error={errors?.password}\n                  placeholder={\"password\"}\n                  withIconStart={<i className=\"icon-key\"></i>}\n                  withIconEnd={true}\n                />\n              </Grid>\n            </>\n          </Grid>\n          <div className={classes.buttonWrapperLogin}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              {/* {loading ? <CircularProgress className={classes.loading} /> : \"\"} */}\n              {\"sign in\"}\n            </Button>\n          </div>\n        </form>\n      </div>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}