{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/react/ui-test/src/helper/Route/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { Redirect, Route as RRoute, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getCachedData } from \"../client/cookieManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Route({\n  authorize,\n  children,\n  ...rest\n}) {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(RRoute, { ...rest,\n    render: ({\n      location\n    }) => {\n      if (authorize && !authorized && pathname !== \"/login\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      } else if (!authorize && authorized) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      } else {\n        return children;\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n\n_c = Route;\nRoute.propTypes = {\n  authorize: PropTypes.bool\n};\nexport default _c2 = /*#__PURE__*/memo(Route);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Route\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/helper/Route/index.js"],"names":["React","memo","Redirect","Route","RRoute","useLocation","PropTypes","getCachedData","authorize","children","rest","pathname","location","authorized","state","from","propTypes","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,QAAT,EAAmBC,KAAK,IAAIC,MAA5B,EAAoCC,WAApC,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;AAEA,SAASJ,KAAT,CAAe;AAAEK,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuB,KAAGC;AAA1B,CAAf,EAAiD;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,EAAhC;AAEA,sBACE,QAAC,MAAD,OACMK,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAkB;AACxB,UAAIJ,SAAS,IAAI,CAACK,UAAd,IAA4BF,QAAQ,KAAK,QAA7C,EAAuD;AACrD,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFA,YAAAA,QAAQ,EAAE,QADR;AAEFG,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD,MASO,IAAI,CAACJ,SAAD,IAAcK,UAAlB,EAA8B;AACnC,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFF,YAAAA,QAAQ,EAAE,GADR;AAEFG,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATM,MASA;AACL,eAAOH,QAAP;AACD;AACF;AAxBH;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA/BQN,K;UACcE,W;;;KADdF,K;AAiCTA,KAAK,CAACa,SAAN,GAAkB;AAChBR,EAAAA,SAAS,EAAEF,SAAS,CAACW;AADL,CAAlB;AAIA,kCAAehB,IAAI,CAACE,KAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { Redirect, Route as RRoute, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getCachedData } from \"../client/cookieManager\";\n\nfunction Route({ authorize, children, ...rest }) {\n  const { pathname } = useLocation();\n\n  return (\n    <RRoute\n      {...rest}\n      render={({ location }) => {\n        if (authorize && !authorized && pathname !== \"/login\") {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location },\n              }}\n            />\n          );\n        } else if (!authorize && authorized) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location },\n              }}\n            />\n          );\n        } else {\n          return children;\n        }\n      }}\n    />\n  );\n}\n\nRoute.propTypes = {\n  authorize: PropTypes.bool,\n};\n\nexport default memo(Route);\n"]},"metadata":{},"sourceType":"module"}