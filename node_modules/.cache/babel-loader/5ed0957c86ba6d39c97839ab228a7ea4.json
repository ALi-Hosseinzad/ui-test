{"ast":null,"code":"import { routes } from \"../mainRouter/MainRouter\";\nexport default class LocalStorageManager {\n  static createInstance() {\n    const object = new LocalStorageManager();\n    return object;\n  }\n\n  static getInstance() {\n    if (!LocalStorageManager.instance) {\n      LocalStorageManager.sharedInstance = LocalStorageManager.createInstance();\n    }\n\n    return LocalStorageManager.sharedInstance;\n  }\n\n  static set(key, data) {\n    const value = typeof data === \"object\" ? JSON.stringify(data) : data;\n    localStorage.setItem(key, value);\n  }\n\n  static update(key, data) {\n    const value = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : {};\n    localStorage.removeItem(key);\n    localStorage.setItem(key, JSON.stringify({ ...value,\n      ...data\n    }));\n  }\n\n  static get(key) {\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch (e) {\n      return localStorage.getItem(key);\n    }\n  }\n\n  static clear() {\n    localStorage.clear();\n    const isRequiredAuthRouts = routes.filter(route => !route.authorize);\n\n    if (isRequiredAuthRouts.findIndex(route => route.path === window.location.pathname) === -1) {\n      window.location.reload();\n    }\n  }\n\n}\nLocalStorageManager.sharedInstance = LocalStorageManager.getInstance();\nexport const cacheData = LocalStorageManager.set;\nexport const getCachedData = LocalStorageManager.get;\nexport const clearCache = LocalStorageManager.clear;","map":{"version":3,"sources":["/home/ali/Desktop/react/ui-test/src/helper/localStorageManager.js"],"names":["routes","LocalStorageManager","createInstance","object","getInstance","instance","sharedInstance","set","key","data","value","JSON","stringify","localStorage","setItem","update","getItem","parse","removeItem","get","e","clear","isRequiredAuthRouts","filter","route","authorize","findIndex","path","window","location","pathname","reload","cacheData","getCachedData","clearCache"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AAEA,eAAe,MAAMC,mBAAN,CAA0B;AAGlB,SAAdC,cAAc,GAAG;AACtB,UAAMC,MAAM,GAAG,IAAIF,mBAAJ,EAAf;AACA,WAAOE,MAAP;AACD;;AAEiB,SAAXC,WAAW,GAAG;AACnB,QAAI,CAACH,mBAAmB,CAACI,QAAzB,EAAmC;AACjCJ,MAAAA,mBAAmB,CAACK,cAApB,GAAqCL,mBAAmB,CAACC,cAApB,EAArC;AACD;;AACD,WAAOD,mBAAmB,CAACK,cAA3B;AACD;;AAES,SAAHC,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAY;AACpB,UAAMC,KAAK,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA3B,GAAkDA,IAAhE;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqBN,GAArB,EAA0BE,KAA1B;AACD;;AAEY,SAANK,MAAM,CAACP,GAAD,EAAMC,IAAN,EAAY;AACvB,UAAMC,KAAK,GAAGG,YAAY,CAACG,OAAb,CAAqBR,GAArB,IACVG,IAAI,CAACM,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqBR,GAArB,CAAX,CADU,GAEV,EAFJ;AAGAK,IAAAA,YAAY,CAACK,UAAb,CAAwBV,GAAxB;AACAK,IAAAA,YAAY,CAACC,OAAb,CACEN,GADF,EAEEG,IAAI,CAACC,SAAL,CAAe,EACb,GAAGF,KADU;AAEb,SAAGD;AAFU,KAAf,CAFF;AAOD;;AAES,SAAHU,GAAG,CAACX,GAAD,EAAM;AACd,QAAI;AACF,aAAOG,IAAI,CAACM,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqBR,GAArB,CAAX,CAAP;AACD,KAFD,CAEE,OAAOY,CAAP,EAAU;AACV,aAAOP,YAAY,CAACG,OAAb,CAAqBR,GAArB,CAAP;AACD;AACF;;AAEW,SAALa,KAAK,GAAG;AACbR,IAAAA,YAAY,CAACQ,KAAb;AACA,UAAMC,mBAAmB,GAAGtB,MAAM,CAACuB,MAAP,CAAeC,KAAD,IAAW,CAACA,KAAK,CAACC,SAAhC,CAA5B;;AACA,QACEH,mBAAmB,CAACI,SAApB,CACGF,KAAD,IAAWA,KAAK,CAACG,IAAN,KAAeC,MAAM,CAACC,QAAP,CAAgBC,QAD5C,MAEM,CAAC,CAHT,EAIE;AACAF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB;AACD;AACF;;AApDsC;AAApB9B,mB,CACZK,c,GAAiBL,mBAAmB,CAACG,WAApB,E;AAsD1B,OAAO,MAAM4B,SAAS,GAAG/B,mBAAmB,CAACM,GAAtC;AACP,OAAO,MAAM0B,aAAa,GAAGhC,mBAAmB,CAACkB,GAA1C;AACP,OAAO,MAAMe,UAAU,GAAGjC,mBAAmB,CAACoB,KAAvC","sourcesContent":["import { routes } from \"../mainRouter/MainRouter\";\n\nexport default class LocalStorageManager {\n  static sharedInstance = LocalStorageManager.getInstance();\n\n  static createInstance() {\n    const object = new LocalStorageManager();\n    return object;\n  }\n\n  static getInstance() {\n    if (!LocalStorageManager.instance) {\n      LocalStorageManager.sharedInstance = LocalStorageManager.createInstance();\n    }\n    return LocalStorageManager.sharedInstance;\n  }\n\n  static set(key, data) {\n    const value = typeof data === \"object\" ? JSON.stringify(data) : data;\n    localStorage.setItem(key, value);\n  }\n\n  static update(key, data) {\n    const value = localStorage.getItem(key)\n      ? JSON.parse(localStorage.getItem(key))\n      : {};\n    localStorage.removeItem(key);\n    localStorage.setItem(\n      key,\n      JSON.stringify({\n        ...value,\n        ...data,\n      })\n    );\n  }\n\n  static get(key) {\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch (e) {\n      return localStorage.getItem(key);\n    }\n  }\n\n  static clear() {\n    localStorage.clear();\n    const isRequiredAuthRouts = routes.filter((route) => !route.authorize);\n    if (\n      isRequiredAuthRouts.findIndex(\n        (route) => route.path === window.location.pathname\n      ) === -1\n    ) {\n      window.location.reload();\n    }\n  }\n}\n\nexport const cacheData = LocalStorageManager.set;\nexport const getCachedData = LocalStorageManager.get;\nexport const clearCache = LocalStorageManager.clear;\n"]},"metadata":{},"sourceType":"module"}